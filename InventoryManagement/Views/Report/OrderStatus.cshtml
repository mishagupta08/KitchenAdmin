@model InventoryManagement.Entity.Common.SalesReport

@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "Order Status";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool IsSoldByHo = (Session["LoginUser"] as User).IsSoldByHo;
    string CurrentPartyCode = (Session["LoginUser"] as User).PartyCode;
    string CurrentPartyName = (Session["LoginUser"] as User).PartyName;
    string BarcodeCaption = System.Configuration.ConfigurationManager.AppSettings["BarcodeCaption"];
}
<style>
    .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }

    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }

    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }
</style>
<script type="text/javascript">
    var grid, dialog;
    var StockGrid = [{}];
    var IsBatch = false;
    var tableStockGrid;
    var StockType = "CurrentStock";
    var IsCategory = false;
    var IsProduct = false;
    var IsParty = false;

    var FromDate = "", ToDate = "";
    var PreviouslySelectedFromDate = "";
    var PreviouslySelectedToDate = "";
    var PreviouslySelectedToPickerDate = "";
    var PreviouslySelectedFromPickerDate = "";
    var ProductList = [];
    var FullProductList;
    var PartyList = [];
    var StallList = [];
    var FullPartyList;
    var CategoryList = [];
    var FullCategoryList;
    var IsDateFilter = false;
    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    var TotalQty = 0;
    $(document).ready(function () {

        GetAllProducts(0);
        $(".preloader").hide();
        var IsAdministrator = '@IsSoldByHo';
        if (IsAdministrator == "True") {
            GetAllParty();
        }
        else {
            $("#PartyCode").val('@CurrentPartyCode');
        }


        $('#IsDateFilter').on('ifChecked', function () {
            IsDateFilter = true;
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
            $("#EndDate").val("All");
            $("#EndDate").prop("readonly", "readonly");
            FromDate = "";
            ToDate = "";

        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            IsDateFilter = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
            FromDate = "";
            ToDate = "";

        });
        $('#IsProduct').on('ifChecked', function () {
            IsProduct = true;
            ProductCode = "";
            $("#ProductName").val("All");
            $("#ProductName").prop("readonly", "readonly");
            $("#ProductCode").val(0);
        });

        $('#IsProduct').on('ifUnchecked', function () {
            IsProduct = false;
            ProductCode = "";
            $("#ProductName").val("");
            $("#ProductName").prop("readonly", "");
            $("#ProductCode").val("0");
        });

        $("#Stall").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(StallList, request.term);
                response(results.slice(0, 50));
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                console.log("ui.item", ui.item.label);
                $("#Stall").val(ui.item.label);
                SetSpecificCode("stall", ui.item.label);
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });


        $("#Kitchen").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(PartyList, request.term);
                response(results.slice(0, 50));
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                $("#Kitchen").val(ui.item.label);
                SetSpecificCode("kitchen", ui.item.label);
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });


        $('#IsParty').on('ifChecked', function () {
            IsParty = true;
            $("#Kitchen").val('All');
            $("#Kitchen").prop("readonly", "readonly");
            $("#PartyCode").val('0');
        });

        $('#IsParty').on('ifUnchecked', function () {

            IsParty = false;
            $("#Kitchen").val('');
            $("#Kitchen").prop("readonly", "");
            $("#PartyCode").val('0');
        });

        $('#IsStall').on('ifChecked', function () {
            IsParty = true;
            $("#Stall").val('All');
            $("#Stall").prop("readonly", "readonly");
            $("#StallCode").val('0');
        });

        $('#IsStall').on('ifUnchecked', function () {

            IsParty = false;
            $("#Stall").val('');
            $("#Stall").prop("readonly", "");
            $("#StallCode").val('0');
        });


        $('#IsDateFilter').on('ifChecked', function () {
            //console.log("checked");
            IsDateFilter = true;
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
            FromDate = "";
            ToDate = "";
            $("#EndDate").val("All");
            $("#EndDate").prop("readonly", "readonly");

        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            //console.log("checked");
            IsDateFilter = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
            FromDate = "";
            ToDate = "";
        });

        $("#StartDate").datetimepicker({
            format: 'DD-MMM-YYYY'
            ,
            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {
            // console.log(e.date);
            // fromDate = $('#FromDatePickerWidget').val();
            var selectedDate = e.date._d;
            console.log(selectedDate.getMonth() + 1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            console.log(selectedDate.getMonth() + 1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);

            var newFromDate = selectedDate.getDate() + "-" + months[selectedDate.getMonth()] + "-" + selectedDate.getFullYear();
            console.log("newDate", newFromDate);
            FromDate = newFromDate;
            PreviouslySelectedFromPickerDate = newFromDate;
            console.log("FromDate", FromDate);
            ToDate = PreviouslySelectedToPickerDate;
        });
        $("#EndDate").datetimepicker({


            format: 'DD-MMM-YYYY'
            ,
            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {

            var selectedDate = e.date._d;

            console.log(selectedDate.getMonth() + 1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);

            var newToDate = selectedDate.getDate() + "-" + months[selectedDate.getMonth()] + "-" + selectedDate.getFullYear();
            console.log("newToDate", newToDate);
            ToDate = newToDate;
            PreviouslySelectedToPickerDate = newToDate;
            console.log("ToDate in picker", ToDate);
            FromDate = PreviouslySelectedFromPickerDate;

        });

        $('#CurrentStock').click(function () {
            $(".preloader").show();
            FromDate = $("#StartDate").val();
            ToDate = $("#EndDate").val();

            var Stall = $("#StallCode").val();
            var Kitchen = $("#KitchenCode").val();
            var Status = $("#OrderStatus").val();
            var DateError = false;


            if (FromDate != "" && FromDate != null && ToDate != "") {

                var d1 = toDate(FromDate);
                var d2 = toDate(ToDate);

                if (d1 > d2) {
                    DateError = true;
                    $(".preloader").hide();
                    OpenDialog("dialogMessage", "From Date should be less than To Date!", "false");
                }
                else {
                    DateError = false;

                }
            }
            else {
                DateError = false;
                if (IsDateFilter == false) {

                }
                if (FromDate == "" || FromDate == null) {
                    FromDate = "All";
                }
                if (ToDate == "" || ToDate == null) {
                    ToDate = "All";
                }
            }


            if (DateError == false) {
                GetStockDetails(FromDate, ToDate, Stall, Kitchen, Status);
            }

        });

        $("#PrintProduct").on('click', function () {
            $("#DetailPrintDiv").printElement();
        });

        $("#btnExport").on('click', function () {
            var UserTypeStr = "SampleProductReport";

            var tableString = "<thead><tr>";

            tableString += "<th>S.No.</th>";
            tableString += "<th>Trans No.</th>";
            tableString += "<th>Trans Date</th>";
            tableString += "<th>Issue Date</th>";
            tableString += "<th>Ref no.</th>";
            tableString += "<th>Issued To</th>";
            tableString += "<th>Qunatity</th>";
            tableString += "<th>Remark</th>";
            tableString += "</tr></thead><tbody>";
            for (var i = 0; i < StockGrid.length; i++) {
                tableString += "<tr>";
                tableString += "<td>" + StockGrid[i].SNo + "</td>";
                tableString += "<td>" + StockGrid[i].TransNo + "</td>";
                tableString += "<td>" + StockGrid[i].TransDate + "</td>";
                tableString += "<td>" + StockGrid[i].IssueDate + "</td>";
                tableString += "<td>" + StockGrid[i].RefNo + "</td>";
                tableString += "<td>" + StockGrid[i].PartyName + "</td>";
                tableString += "<td>" + StockGrid[i].Qty + "</td>";
                tableString += "<td>" + StockGrid[i].Remark + "</td>";
                tableString += "</tr>";
            }

            tableString += "</tbody>";
            $("#gridExport").empty();
            $("#gridExport").append(tableString);
            tableToExcel('gridExport', UserTypeStr + "_Export");

        });

    });
    function toDate(dateStr) {
        var parts = dateStr.split("-");
        return new Date(parts[2], parts[1] - 1, parts[0]);
    }

    function SetSpecificCode(type, label) {
        if (type == "stall") {
            for (var i = 0; i < FullPartyList.length; i++) {
                if (FullPartyList[i].PartyName == label) {
                    $("#StallCode").val(FullPartyList[i].PartyCode);
                    break;
                }
            }
        }

        if (type == "kitchen") {
            for (var i = 0; i < FullPartyList.length; i++) {
                if (FullPartyList[i].PartyName == label) {
                    $("#KitchenCode").val(FullPartyList[i].PartyCode);
                    break;
                }
            }
        }
    }

    function GetAllProducts(catId) {

        $.ajax({
            url: '/Report/GetAllProduct',
            dataType: "json",
            method: 'POST',
            async: false,
            data: { 'CategoryCode': catId },
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullProductList = data;
                ProductList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        //console.log("data[i]", data[i]);
                        ProductList.push(data[i].ProductName);
                    }
                }
            },
            error: function (xhr, status, error) {
                console.log("xhr.responseText:", xhr.responseText);
                //var responseText = jQuery.parseJSON(xhr.responseText);
                //console.log("responseText.ExceptionType:", responseText.ExceptionType);
                //console.log("responseText.Message:", responseText.Message);
            }
        });
    }

    function GetAllParty() {
        $.ajax({
            url: '/Report/GetAllPartyListForReports',
            dataType: 'JSON',
            method: 'GET',
            //data: { 'LedgerName': '' },
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullPartyList = data;
                PartyList = [];
                StallList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        if (data[i].GroupId == 100) {
                            PartyList.push(data[i].PartyName);
                        }
                        else if (data[i].GroupId == 105) {
                            StallList.push(data[i].PartyName);
                        }
                    }
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }

    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        $("#" + dialogId).append('<p>' + Message + '</p>');
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = true;
                        $("#" + dialogId).dialog("close");


                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {


            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}

                        $("#" + dialogId).dialog("close");


                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }

    }
    function fillGrid() {
        $("#noRecord").hide();
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }

        grid = $('#grid').grid({
            dataSource: StockGrid,
            uiLibrary: 'bootstrap',
            columns: [
                { field: 'SNo', title: 'S.No.', width: 50, sortable: true, hidden: false, filterable: false },
                { field: 'OrderId', title: 'Order No.', width: 80, sortable: true, hidden: false, filterable: true, events: { 'click': GetDetail }, tmpl: '<a style="text-decoration:underline;color:blue">{OrderId}</a>', align: 'center' },
                { field: 'OrderDate', width: 80, title: 'Order Date', sortable: true, hidden: false, filterable: true },
                { field: 'OrderBy', width: 80, title: 'Order By', sortable: true, hidden: false, filterable: true },
                { field: 'OrderToKitchen', width: 150, title: 'Order To Kitchen', sortable: true, hidden: false, filterable: true },
                { field: 'TotalOrdQty', width: 80, title: 'Total Qty', sortable: true, hidden: false, filterable: true },
                { field: 'Status', width: 120, title: 'Status', sortable: true, hidden: false, filterable: true },
                { field: 'Remark', width: 120, title: 'Remark', sortable: true, hidden: true, filterable: true },
            ],
            pager: { limit: 50, sizes: [15, 20, 35, 50, 65, 80, 95, 100] },

        });

        $(".loader").hide();
    }

    function GetDetail(e) {
        var BillNoToDelete = e.data.record.OrderId;
        $("#TransNo").html("Order No :-" + e.data.record.OrderId);
        $("#TransDate").html("Order Date :-" + e.data.record.OrderDate);
        $("#OrderTo").html("Order From :-" + e.data.record.OrderBy);
        $("#OrderBy").html("Order To :-" + e.data.record.OrderToKitchen);

        $.ajax({
            url: '/Report/GetOrderProductList',
            dataType: "json",
            method: 'GET',
            async: false,
            data: { 'OrderNo': BillNoToDelete },
            success: function (data) {
                $("#DetaildialogDiv").html(data);
            },
            error: function (xhr, status, error) {
                console.log("xhr.responseText:", xhr.responseText);
            }
        });
        openDetailPopup();

    }

    function openDetailPopup() {
        $("#Detaildialog").dialog({
            modal: true,
            width: "60%"
        });

        $("#Detaildialog").dialog("open");
    }

    function GetStockDetails(startDate, endDate, Stall, Kitchen, Status) {
        $.ajax({
            url: '@Url.Action("GetOrderStatusReport", "Report")',
            type: 'POST',
            data: { "FromDate": startDate, "ToDate": endDate, "Stall": Stall, "Kitchen": Kitchen, "Status": Status },
            dataType: "json",
            success: function (objResult) {
                StockGrid = [{}];
                if (objResult.length > 0) {
                    StockGrid = StockGrid.splice(1);
                    for (var i = 0; i < objResult.length; i++) {
                        var dateObj = new Date(objResult[i].OrderDate.match(/\d+/)[0] * 1);
                        var myDate = (dateObj.getDate()) + "/" + (dateObj.getMonth() + 1) + "/" + dateObj.getFullYear();
                        StockGrid.push({
                            "SNo": i + 1,
                            "OrderId": objResult[i].OrderId,
                            "OrderBy": objResult[i].OrderBy,
                            "OrderDate": myDate,
                            "OrderToKitchen": objResult[i].OrderToKitchen,
                            "TotalOrdQty": objResult[i].TotalOrdQty,
                            "Status": objResult[i].Status,
                            "Remarks": objResult[i].Remarks,
                            "NetPayable": objResult[i].NetPayable,
                            "TotalAmount": objResult[i].TotalAmount,
                            "TotalTaxAmt": objResult[i].TotalTaxAmt
                        });
                    }
                    tableStockGrid = StockGrid;
                    $("#noRecord").hide();
                }
                else {

                    $("#noRecord").show();
                }
                fillGrid();
                $(".preloader").hide();

            },
            error: function (xhr, data) {
                //  return false;
                console.log(xhr);
                console.log("Error:", data);
            }
        });



    }
</script>

<div class="row">

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Order Status</h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />
                    <form id="distributorForm" method="post" name="distributorForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">

                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                @Html.HiddenFor(m => m.KitchenCode, new { id = "KitchenCode", name = "KitchenCode" })
                                @Html.HiddenFor(m => m.StallCode, new { id = "StallCode", name = "StallCode" })
                                <div class="form-group" style="margin-bottom:0px">
                                    <label class="control-label col-lg-2 col-md-2 col-sm-4 col-xs-12" for="category-name">
                                        Select Date @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12" style="padding-left: 0.5%;">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.StartDate, new { name = "StartDate", id = "StartDate", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>

                                    <label class="control-label col-lg-1 col-md-2 col-sm-3 col-xs-3" for="category-name">
                                        To  @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12" style="padding-left: 0.5%;">
                                        @Html.TextBoxFor(m => m.EndDate, new { name = "EndDate", id = "EndDate", tabindex = "2", @class = "form-control col-md-7 col-xs-12" })
                                    </div>
                                    <div id="IsDateFilterDiv" class="col-lg-1 col-md-1 col-sm-1 col-xs-3" style="padding-left: 0.5%;">
                                        <label>
                                            <input type="checkbox" id="IsDateFilter" name="IsDateFilter" class="flat" tabindex="3" />

                                        </label>
                                    </div>
                                </div>
                            </div>

                        </div>
                                    <div class="col-lg-12">
                                        <div class="col-lg-8">
                                            <div class="form-group">
                                                <label class="control-label col-lg-2 col-md-2 col-sm-3 col-xs-3" for="category-name">
                                                    Select Kitchen
                                                </label>
                                                <div class="col-lg-10 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                                    @Html.TextBoxFor(m => m.Kitchen, new { name = "Kitchen", id = "Kitchen", tabindex = "5", @class = "form-control col-lg-12" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                <div id="IsPartyDiv">
                                                    <label>
                                                        <input type="checkbox" id="IsParty" name="IsParty" class="flat" tabindex="6" />


                                                    </label>

                                                </div>
                                            </div>
                                        </div>
                                   
                            

                        </div>

                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="form-group">
                                    <label class="control-label col-lg-2 col-md-2 col-sm-3 col-xs-3" for="category-name">
                                        Select Stall
                                    </label>
                                    <div class="col-lg-10 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                        @Html.TextBoxFor(m => m.Stall, new { name = "Stall", id = "Stall", tabindex = "5", @class = "form-control col-lg-12" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div id="IsPartyDiv">
                                        <label>
                                            <input type="checkbox" id="IsStall" name="IsStall" class="flat" tabindex="6" />


                                        </label>

                                    </div>
                                </div>
                            </div>


                            

                        </div>
                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="form-group">
                                    <label class="control-label col-lg-2 col-md-2 col-sm-3 col-xs-3" for="category-name">
                                        Status
                                    </label>
                                    <div class="col-lg-10 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">
                                         <select id="OrderStatus" class = "form-control col-lg-12">
                                            <option value="All">All</option>
                                            <option value="Pending">Pending</option>
                                            <option value="Cooked">Cooked</option>
                                            <option value="Packed">Packed</option>
                                            <option value="Delivered">Delivered</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div id="IsPartyDiv">
                                        <label>
                                            <input type="checkbox" id="IsStall" name="IsStall" class="flat" tabindex="6" />


                                        </label>

                                    </div>
                                </div>
                            </div>


                            <div class="col-lg-4">
                                <div class="form-group">
                                    <input type="button" id="CurrentStock" name="CurrentStock" value="Get Report" />
                                    @*<img src="~/images/ExcelImage.jpg" id="btnExport" style="height: 25px;cursor:pointer" />*@
                                </div>
                            </div>

                        </div>
                        <table id="gridExport" style="display:none"></table>

                    </form>


                </div>
                <div class="col-lg-12">

                    <div class="form-group">

                        <table class="table bootstrap-datatable" id="grid"></table>
                        <center><span style="display:none" id="noRecord">No Records Found</span></center>


                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="col-lg-5">&nbsp;</div>

                    @*<div class="col-lg-4">Total Net Amount :- <span id="totalNetAmount"></span></div>*@
                </div>
            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>
    <div id="Detaildialog" style="display: none;" title="Sample product detail">
        @*<div class="col-lg-12">
                <input style="float:right;" type="button" id="PrintProduct" name="PrintProduct" value="Print" />
            </div>*@
        <div class="col-lg-12">
            &nbsp;
        </div>
        <div id="DetailPrintDiv" class="col-lg-12">
            <div class="col-lg-12">
                <table border="1" width="100%">
                    <tr>
                        <td id='TransNo'></td>
                        <td id='TransDate'></td>
                        <td id='OrderBy'></td>
                        <td id='OrderTo'></td>
                    </tr>
                    <tr>
                        <td colspan="4" id='Remark'></td>
                    </tr>
                </table>
            </div>
            <div class="col-lg-12">
                &nbsp;
            </div>
            <div id="DetaildialogDiv" class="col-lg-12">

            </div>
        </div>


    </div>
</div>
